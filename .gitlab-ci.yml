workflow:
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /^Draft:/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

stages:
  - test-quick
  - test-e2e


.tox_job_template: &tox_job_template
  image: fedora:39
  before_script:
    - dnf install -y python3
    - python3 -m venv tox_env
    - ./tox_env/bin/python3 --version
    - ./tox_env/bin/python3 -m pip install --upgrade tox
  script:
    - ./tox_env/bin/tox -e $TOX_TARGET


tox-linter:
  stage: test-quick
  variables:
    TOX_TARGET: linter
  <<: *tox_job_template


tox-unit:
  stage: test-quick
  variables:
    TOX_TARGET: py
  <<: *tox_job_template


shellcheck:
  stage: test-quick
  image: fedora:39
  before_script:
    - dnf install -y ShellCheck git
  script:
    - ./shellcheck.sh


# This test does not use its own containers and does not run any
# portion of the build in isolation. It's useful for verifying that
# building some of the more complex packages, with patches, works OK
# and that the dependency resolution algorithm is handling all of the
# edge cases.
e2e-without-isolation:
  stage: test-e2e

  image: fedora:39

  parallel:
    matrix:
      - PYTHON_TO_TEST:
          - python3.9
          - python3.11
          - python3.12

  before_script:
    - bash -x ./setup.sh

  script:
    - PYTHON_TO_TEST=$PYTHON_TO_TEST ./test.sh
