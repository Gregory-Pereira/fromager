stages:
  - test-quick
  - test-e2e
  - manual

.mr_rules_template: &mr_rules_template
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /^Draft:/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

.tox_job_template: &tox_job_template
  <<: *mr_rules_template
  image: fedora:39
  before_script:
    - dnf install -y python3
    - python3 -m venv tox_env
    - ./tox_env/bin/python3 --version
    - ./tox_env/bin/python3 -m pip install --upgrade tox
  script:
    - ./tox_env/bin/tox -e $TOX_TARGET

.python_versions: &python_versions
  - PYTHON:
    - python3.11
    - python3.12


tox-linter:
  stage: test-quick
  variables:
    TOX_TARGET: linter
  <<: *tox_job_template


tox-unit:
  stage: test-quick
  variables:
    TOX_TARGET: py
  <<: *tox_job_template


shellcheck:
  <<: *mr_rules_template
  stage: test-quick
  image: fedora:39
  before_script:
    - dnf install -y ShellCheck git
  script:
    - ./shellcheck.sh


markdown-lint:
  <<: *mr_rules_template
  stage: test-quick
  image: fedora:39
  before_script:
    - dnf -y install nodejs
    - npm install -g markdownlint@v0.25.1 markdownlint-cli2@v0.4.0
  script:
    - ./hack/run_markdownlint.sh


# This test does not use its own containers and does not run any
# portion of the build in isolation. It's useful for verifying that
# building some of the more complex packages, with patches, works OK
# and that the dependency resolution algorithm is handling all of the
# edge cases.
e2e-without-isolation:
  <<: *mr_rules_template
  stage: test-e2e

  image: fedora:39

  parallel:
    matrix:
      *python_versions

  before_script:
    - bash -x ./setup.sh

  script:
    - PYTHON=$PYTHON ./e2e/test_without_isolation.sh


# This test does not use its own containers and does not run any
# portion of the build in isolation. It's useful for verifying that
# when a build dependency is not present in the index, we report a
# full, clear error message showing all of the dependencies so someone
# can add everything at once.
e2e-report-missing-dependency:
  <<: *mr_rules_template
  stage: test-e2e

  image: fedora:39

  parallel:
    matrix:
      *python_versions

  before_script:
    - bash -x ./setup.sh
    # The test script needs to run `ip route` but nothing else in the
    # stack needs that command so add it as a dependency in the test
    # setup instead of more globally in setup.sh or the Containerfile.
    - dnf install -y iproute

  script:
    - PYTHON=$PYTHON ./e2e/test_report_missing_dependency.sh

# Pre-merge pipeline for testing the onboard_sdist.sh pipeline. It
# grabs a source archive without uploading it to the index server.
e2e-onboard-sdist:
  <<: *mr_rules_template
  stage: test-e2e

  artifacts:
    paths:
      - sdists-repo/downloads/*.tar.gz
      - build-logs/*.log

  image: fedora:39

  before_script:
    # We need a python interpreter. It doesn't matter which one, so
    # pick the one that's going to be the default for most builds.
    - dnf install -y python3.11

  script:
    - ./pipelines/onboard_sdist.sh numpy 1.26.4


# This test does not use its own containers and does not run any
# portion of the build in isolation. It's useful for verifying that
# building a base-level package works.
e2e-build-flit-core:
  <<: *mr_rules_template
  stage: test-e2e

  image: fedora:39

  parallel:
    matrix:
      *python_versions

  before_script:
    - bash -x ./setup.sh

  script:
    - PYTHON=$PYTHON ./e2e/test_build_flit_core.sh


# Manual pipeline to produce bootstrap artifacts for determining which
# packages need to be included to produce a build.
bootstrap:
  stage: manual
  rules:
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "bootstrap"

  variables:
    DIST_NAME: ""
    DIST_VERSION: ""
    PYTHON: "python3.11"

  artifacts:
    paths:
      - work-dir/build-order.json
      - work-dir/bootstrap.log

  image: fedora:39

  before_script:
    - bash -x ./setup.sh

  script:
    - PYTHON=$PYTHON ./pipelines/bootstrap.sh ${DIST_NAME}==${DIST_VERSION}

# Manual pipeline to update the tools used by the pipelines.
update-tools:
  stage: manual
  rules:
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "update-tools"

  variables:
    DIST_NAME: ""
    DIST_VERSION: ""
    SECURE_FILES_DOWNLOAD_PATH: ./config

  artifacts:
    paths:
      - build-logs/*.log

  image: fedora:39

  before_script:
    # We need a python interpreter. It doesn't matter which one, so
    # pick the one that's going to be the default for most builds.
    - ./setup.sh
    # Extra dependencies needed for the secure files installer.
    - dnf install -y which curl

  script:
    # Initialize secure files, following https://docs.gitlab.com/ee/ci/secure_files/
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
    - ./pipelines/update_tools.sh
    - CONFIG=$SECURE_FILES_DOWNLOAD_PATH/pypirc.ini INDEX=internal/tools ./upload_to_index.sh wheels-repo/downloads/*.whl sdists-repo/downloads/*.tar.gz

# Manual pipeline to copy the sdist for 1 package to the index server.
onboard-sdist:
  stage: manual
  rules:
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "onboard-sdist"

  variables:
    DIST_NAME: ""
    DIST_VERSION: ""
    SECURE_FILES_DOWNLOAD_PATH: ./config

  artifacts:
    paths:
      - sdists-repo/downloads/*.tar.gz
      - build-logs/*.log

  image: fedora:39

  before_script:
    # We need a python interpreter. It doesn't matter which one, so
    # pick the one that's going to be the default for most builds.
    - dnf install -y python3.11
    # Extra dependencies needed for the secure files installer.
    - dnf install -y which curl

  script:
    # Initialize secure files, following https://docs.gitlab.com/ee/ci/secure_files/
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
    - ./pipelines/onboard_sdist.sh ${DIST_NAME} ${DIST_VERSION}
    - CONFIG=$SECURE_FILES_DOWNLOAD_PATH/pypirc.ini INDEX=experimental/sources ./upload_to_index.sh sdists-repo/downloads/*.tar.gz


# Base template for a build-wheel job
.build-wheel-base:
  stage: manual
  rules:
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel"

  variables:
    DIST_NAME: ""
    DIST_VERSION: ""
    PYTHON: ""
    SECURE_FILES_DOWNLOAD_PATH: ./config

  artifacts:
    paths:
      - wheels-repo/build/*.whl
      - sdists-repo/downloads/*.tar.gz
      - build-logs/*.log
      - work-dir/*/*requirements.txt

  image: fedora:39

  before_script:
    - bash -x ./setup.sh
    # Extra dependencies needed for the secure files installer.
    - dnf install -y which curl

  script:
    # Initialize secure files, following https://docs.gitlab.com/ee/ci/secure_files/
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
    - PYTHON=$PYTHON ./build_wheel.sh -d ${DIST_NAME} -v ${DIST_VERSION} -V cpu
    - CONFIG=$SECURE_FILES_DOWNLOAD_PATH/pypirc.ini INDEX=experimental/cpu ./upload_to_index.sh wheels-repo/build/*.whl


# Manual pipeline to produce one wheel for python 3.11. This is also
# the default wheel for building pure python wheels that do not have a
# component that requires different python versions.
build-wheel-py311:
  extends: .build-wheel-base
  variables:
    PYTHON: "python3.11"


# Manual pipeline to produce one wheel for python 3.12. This should
# only be triggered for packages with platform-specific components
# that need to be compiled differently for different versions of
# python.
build-wheel-py312:
  extends: .build-wheel-base
  variables:
    PYTHON: "python3.12"
  rules:
    # Binary packages, using packaging.utils.canonicalize_name() form.
    # Use "tox -e cli -- canonicalize $DIST" to to find the name.
    # Use "tox -e cli -- pipeline-rules" to build a list of rules
    #   for wheels that exist in wheels-repo/downloads.
    # Keep the names in alphabetical order.
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "absl_py"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "accelerate"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "aiohttp"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "aiosignal"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "annotated_types"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "anyio"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "appdirs"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "argcomplete"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "argh"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "argon2-cffi-bindings"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "asgiref"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "astunparse"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "attrs"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "calver"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "certifi"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "cffi"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "cfgv"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "charset_normalizer"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "click"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "click_didyoumean"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "cmake"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "cmarkgfm"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "coverage"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "cryptography"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "cython"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "datasets"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "dill"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "diskcache"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "distro"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "django"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "dnspython"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "docker_pycreds"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "docstring_parser"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "email_validator"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "entangled_cli"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "expandvars"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "fastapi"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "fastapi_cli"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "fields"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "filelock"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "flake8"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "flit_core"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "frozenlist"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "fsspec"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "gguf"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "gitdb"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "gitpython"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "h11"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "hatch_fancy_pypi_readme"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "hatch_vcs"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "hatchling"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "httpcore"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "httptools"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "httpx"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "huggingface_hub"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "hunter"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "identify"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "idna"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "importlib_metadata"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "instructlab"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "ipaddress"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "jinja2"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "jsonpatch"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "jsonpointer"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "jsonschema"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "jsonschema_specifications"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "langchain_core"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "langchain_text_splitters"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "langsmith"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "llama_cpp_python"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "manhole"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "markdown_it_py"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "markupsafe"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "maturin"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "mccabe"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "mdurl"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "meson"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "meson_python"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "mock"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "mpmath"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "multidict"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "multiprocess"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "mypy"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "mypy_extensions"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "networkx"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "ninja"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "nltk"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "numpy"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "openai"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "orjson"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "packaging"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pandas"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "patchelf"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pathspec"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pdm_backend"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "peft"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pexpect"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pkginfo"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pluggy"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "poetry_core"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pre_commit"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "process_tests"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "prompt_toolkit"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "protobuf"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "psutil"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "ptyprocess"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pyarrow"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pyarrow_hotfix"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pycodestyle"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pycparser"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pydantic"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pydantic_core"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pydantic_settings"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pydantic_yaml"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pyflakes"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pygments"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pyproject_metadata"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pytest_asyncio"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pytest_cov"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pytest_xdist"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "python_dateutil"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "python_dotenv"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "python_multipart"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pytz"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "pyyaml"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "referencing"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "regex"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "requests"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "rich"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "rouge_score"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "rpds_py"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "ruamel_yaml"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "ruamel_yaml_clib"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "safetensors"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "scikit_build"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "scikit_build_core"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "semantic_version"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "sentencepiece"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "sentry_sdk"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "setproctitle"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "setuptools"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "setuptools_rust"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "setuptools_scm"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "shellingham"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "shtab"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "six"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "smmap"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "sniffio"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "sphinx"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "sphinxcontrib_applehelp"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "sse_starlette"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "starlette"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "starlette_context"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "sympy"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "tenacity"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "tokenizers"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "toml"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "tomli"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "torch"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "tqdm"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "transformers"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "triton"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "trl"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "trove_classifiers"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "twine"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "typer"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "types_psutil"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "types_setuptools"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "typing_extensions"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "tyro"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "tzdata"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "ujson"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "urllib3"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "uvicorn"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "uvloop"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "versioneer"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "vllm"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "wandb"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "watchfiles"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "wcwidth"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "websockets"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "wheel"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "xxhash"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "yamllint"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "yarl"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "zipp"
    - if: $CI_PIPELINE_SOURCE == "trigger" && $JOB == "build-wheel" && $DIST_NAME == "zope-interface"
